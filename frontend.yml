version: '3.8'

services:
  frontend:
    image: node:14  # Or the Node.js version your React app requires
    container_name: zephyrnet_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app  # Mount the local frontend directory to the container
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - REACT_APP_BACKEND_URL=http://backend:5000  # Backend API URL in the Docker network
    ports:
      - "3000:3000"  # Expose port 3000 for local development
    command: ["npm", "start"]  # For development mode, use "npm start". For production, use "npm run build" and serve with Nginx.
    depends_on:
      - nginx  # Depends on Nginx to act as reverse proxy in production, if configured

  nginx:
    image: nginx:latest
    container_name: zephyrnet_nginx_frontend
    depends_on:
      - frontend
    ports:
      - "80:80"  # Expose port 80 for the frontend
    volumes:
      - ./nginx/frontend.conf:/etc/nginx/conf.d/default.conf  # Mount custom Nginx configuration
      - ./frontend/build:/usr/share/nginx/html  # Serve the React build files
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80

  backend:
    image: node:14  # Or replace with your backend container image
    container_name: zephyrnet_backend
    environment:
      - NODE_ENV=production
      - REACT_APP_BACKEND_URL=http://backend:5000  # Ensure this environment variable is set
    depends_on:
      - db
    ports:
      - "5000:5000"

  db:
    image: postgres:13
    container_name: zephyrnet_db
    environment:
      POSTGRES_DB: zephyrnet_chat
      POSTGRES_USER: your_db_user
      POSTGRES_PASSWORD: your_db_password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:6
    container_name: zephyrnet_redis
    ports:
      - "6379:6379"

volumes:
  pgdata:
